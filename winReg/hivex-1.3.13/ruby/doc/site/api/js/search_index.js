var search_data = {"index":{"searchIndex":["hivex","error","hivex","close()","commit()","last_modified()","node_add_child()","node_children()","node_delete_child()","node_get_child()","node_get_value()","node_name()","node_name_len()","node_parent()","node_set_value()","node_set_values()","node_struct_length()","node_timestamp()","node_values()","open()","root()","value_data_cell_offset()","value_dword()","value_key()","value_key_len()","value_multiple_strings()","value_qword()","value_string()","value_struct_length()","value_type()","value_value()","readme"],"longSearchIndex":["hivex","hivex::error","hivex::hivex","hivex::hivex#close()","hivex::hivex#commit()","hivex::hivex#last_modified()","hivex::hivex#node_add_child()","hivex::hivex#node_children()","hivex::hivex#node_delete_child()","hivex::hivex#node_get_child()","hivex::hivex#node_get_value()","hivex::hivex#node_name()","hivex::hivex#node_name_len()","hivex::hivex#node_parent()","hivex::hivex#node_set_value()","hivex::hivex#node_set_values()","hivex::hivex#node_struct_length()","hivex::hivex#node_timestamp()","hivex::hivex#node_values()","hivex::open()","hivex::hivex#root()","hivex::hivex#value_data_cell_offset()","hivex::hivex#value_dword()","hivex::hivex#value_key()","hivex::hivex#value_key_len()","hivex::hivex#value_multiple_strings()","hivex::hivex#value_qword()","hivex::hivex#value_string()","hivex::hivex#value_struct_length()","hivex::hivex#value_type()","hivex::hivex#value_value()",""],"info":[["Hivex","","Hivex.html","",""],["Hivex::Error","","Hivex/Error.html","",""],["Hivex::Hivex","","Hivex/Hivex.html","",""],["close","Hivex::Hivex","Hivex/Hivex.html#method-i-close","()","<p>close a hive handle\n<p>Close a hive handle and free all associated resources.\n<p>Note that any uncommitted writes …\n"],["commit","Hivex::Hivex","Hivex/Hivex.html#method-i-commit","(p1)","<p>commit (write) changes to file\n<p>Commit (write) any changes which have been made.\n<p>“filename” is …\n"],["last_modified","Hivex::Hivex","Hivex/Hivex.html#method-i-last_modified","()","<p>return the modification time from the header of the hive\n<p>Return the modification time from the header …\n"],["node_add_child","Hivex::Hivex","Hivex/Hivex.html#method-i-node_add_child","(p1, p2)","<p>add child node\n<p>Add a new child node named “name” to the existing node “parent”. The …\n"],["node_children","Hivex::Hivex","Hivex/Hivex.html#method-i-node_children","(p1)","<p>return children of node\n<p>Return an array of nodes which are the subkeys (children) of “node”. …\n"],["node_delete_child","Hivex::Hivex","Hivex/Hivex.html#method-i-node_delete_child","(p1)","<p>delete child node\n<p>Delete the node “node”. All values at the node and all subnodes are deleted\n…\n"],["node_get_child","Hivex::Hivex","Hivex/Hivex.html#method-i-node_get_child","(p1, p2)","<p>return named child of node\n<p>Return the child of node with the name “name”, if it exists.\n<p>The name …\n"],["node_get_value","Hivex::Hivex","Hivex/Hivex.html#method-i-node_get_value","(p1, p2)","<p>return named key at node\n<p>Return the value attached to this node which has the name “key”, if …\n"],["node_name","Hivex::Hivex","Hivex/Hivex.html#method-i-node_name","(p1)","<p>return the name of the node\n<p>Return the name of the node.\n<p>Note that the name of the root node is a dummy, …\n"],["node_name_len","Hivex::Hivex","Hivex/Hivex.html#method-i-node_name_len","(p1)","<p>return the length of a node&#39;s name\n<p>Return the length of the node name as produced by “h.node_name”. …\n"],["node_parent","Hivex::Hivex","Hivex/Hivex.html#method-i-node_parent","(p1)","<p>return the parent of node\n<p>Return the parent of “node”.\n<p>The parent pointer of the root node in …\n"],["node_set_value","Hivex::Hivex","Hivex/Hivex.html#method-i-node_set_value","(p1, p2)","<p>set a single (key, value) pair at a given node\n<p>This call can be used to replace a single “(key, value)” …\n"],["node_set_values","Hivex::Hivex","Hivex/Hivex.html#method-i-node_set_values","(p1, p2)","<p>set (key, value) pairs at a node\n<p>This call can be used to set all the (key, value) pairs stored in “node”. …\n"],["node_struct_length","Hivex::Hivex","Hivex/Hivex.html#method-i-node_struct_length","(p1)","<p>return the length of a node\n<p>Return the length of the node data structure.\n<p>(For the C API documentation …\n"],["node_timestamp","Hivex::Hivex","Hivex/Hivex.html#method-i-node_timestamp","(p1)","<p>return the modification time of the node\n<p>Return the modification time of the node.\n<p>The returned value is …\n"],["node_values","Hivex::Hivex","Hivex/Hivex.html#method-i-node_values","(p1)","<p>return (key, value) pairs attached to a node\n<p>Return the array of (key, value) pairs attached to this node. …\n"],["open","Hivex","Hivex.html#method-c-open","(p1, p2)","<p>open a hive file\n<p>Opens the hive named “filename” for reading.\n<p>Flags is an ORed list of the open …\n"],["root","Hivex::Hivex","Hivex/Hivex.html#method-i-root","()","<p>return the root node of the hive\n<p>Return root node of the hive. All valid hives must contain a root node. …\n"],["value_data_cell_offset","Hivex::Hivex","Hivex/Hivex.html#method-i-value_data_cell_offset","(p1)","<p>return the offset and length of a value data cell\n<p>Return the offset and length of the value&#39;s data …\n"],["value_dword","Hivex::Hivex","Hivex/Hivex.html#method-i-value_dword","(p1)","<p>return value as a DWORD\n<p>If this value is a DWORD (Windows int32), return it. This only works for\nvalues …\n"],["value_key","Hivex::Hivex","Hivex/Hivex.html#method-i-value_key","(p1)","<p>return the key of a (key, value) pair\n<p>Return the key (name) of a (key, value) pair. The name is reencoded …\n"],["value_key_len","Hivex::Hivex","Hivex/Hivex.html#method-i-value_key_len","(p1)","<p>return the length of a value&#39;s key\n<p>Return the length of the key (name) of a (key, value) pair as produced …\n"],["value_multiple_strings","Hivex::Hivex","Hivex/Hivex.html#method-i-value_multiple_strings","(p1)","<p>return value as multiple strings\n<p>If this value is a multiple-string, return the strings reencoded as UTF-8 …\n"],["value_qword","Hivex::Hivex","Hivex/Hivex.html#method-i-value_qword","(p1)","<p>return value as a QWORD\n<p>If this value is a QWORD (Windows int64), return it. This only works for\nvalues …\n"],["value_string","Hivex::Hivex","Hivex/Hivex.html#method-i-value_string","(p1)","<p>return value as a string\n<p>If this value is a string, return the string reencoded as UTF-8 (as a C\nstring). …\n"],["value_struct_length","Hivex::Hivex","Hivex/Hivex.html#method-i-value_struct_length","(p1)","<p>return the length of a value data structure\n<p>Return the length of the value data structure.\n<p>(For the C  …\n"],["value_type","Hivex::Hivex","Hivex/Hivex.html#method-i-value_type","(p1)","<p>return data length and data type of a value\n<p>Return the data length and data type of the value in this …\n"],["value_value","Hivex::Hivex","Hivex/Hivex.html#method-i-value_value","(p1)","<p>return data length, data type and data of a value\n<p>Return the value of this (key, value) pair. The value …\n"],["README","","README_rdoc.html","","<p>Ruby bindings for hivex\n<p>The module Hivex provides Ruby bindings for the hivex API.\n"]]}}